{"version":3,"sources":["webpack:///node_modules/bnc-onboard/dist/esm/hd-wallet-642b97e3.js","webpack:///node_modules/hdkey/lib/hdkey.js"],"names":["publicToAddress","toChecksumAddress","numberToGet","generateAddresses","account","offset","publicKey","chainCode","path","hdk","addresses","i","dkey","deriveChild","address","toString","push","dPath","concat","isValidPath","parts","split","undefined","accountFieldDigit","Number","isNaN","changeFieldDigit","addressFieldDigit","assert","Buffer","crypto","bs58check","secp256k1","MASTER_SECRET","from","HARDENED_OFFSET","LEN","BITCOIN_VERSIONS","HDKey","versions","depth","index","_privateKey","_publicKey","_fingerprint","parentFingerprint","Object","defineProperty","prototype","get","_identifier","identifier","set","value","equal","length","privateKeyVerify","publicKeyCreate","hash160","slice","readUInt32BE","publicKeyVerify","publicKeyConvert","encode","serialize","alloc","privateKey","derive","entries","hdkey","forEach","c","test","hardened","childIndex","parseInt","isHardened","indexBuffer","allocUnsafe","writeUInt32BE","data","pk","zb","I","createHmac","update","digest","IL","IR","hd","privateKeyTweakAdd","err","publicKeyTweakAdd","fingerprint","sign","hash","ecdsaSign","signature","verify","ecdsaVerify","Uint8Array","wipePrivateData","randomBytes","copy","toJSON","xpriv","privateExtendedKey","xpub","publicExtendedKey","fromMasterSeed","seedBuffer","fromExtendedKey","base58key","keyBuffer","decode","version","readUInt8","key","fromJSON","obj","buffer","writeUInt8","buf","sha","createHash","module","exports"],"mappings":"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","file":"hd-wallet-642b97e3-js-es5.js","sourcesContent":["import HDKey from 'hdkey';\nimport * as ethUtil from 'ethereumjs-util';\nimport { Buffer } from 'buffer';\nvar publicToAddress = ethUtil.publicToAddress,\n    toChecksumAddress = ethUtil.toChecksumAddress;\nvar numberToGet = 5;\n\nfunction generateAddresses(account, offset) {\n  var publicKey = account.publicKey,\n      chainCode = account.chainCode,\n      path = account.path;\n  var hdk = new HDKey();\n  hdk.publicKey = new Buffer(publicKey, 'hex');\n  hdk.chainCode = new Buffer(chainCode, 'hex');\n  var addresses = [];\n\n  for (var i = offset; i < numberToGet + offset; i++) {\n    var dkey = hdk.deriveChild(i);\n    var address = publicToAddress(dkey.publicKey, true).toString('hex');\n    addresses.push({\n      dPath: \"\".concat(path, \"/\").concat(i),\n      address: toChecksumAddress(\"0x\".concat(address))\n    });\n  }\n\n  return addresses;\n}\n\nfunction isValidPath(path) {\n  var parts = path.split('/');\n\n  if (parts[0] !== 'm') {\n    return false;\n  }\n\n  if (parts[1] !== \"44'\") {\n    return false;\n  }\n\n  if (parts[2] !== \"60'\" && parts[2] !== \"1'\") {\n    return false;\n  }\n\n  if (parts[3] === undefined) {\n    return true;\n  }\n\n  var accountFieldDigit = Number(parts[3][0]);\n\n  if (isNaN(accountFieldDigit) || accountFieldDigit < 0 || parts[3][1] !== \"'\") {\n    return false;\n  }\n\n  if (parts[4] === undefined) {\n    return true;\n  }\n\n  var changeFieldDigit = Number(parts[4][0]);\n\n  if (isNaN(changeFieldDigit) || changeFieldDigit < 0) {\n    return false;\n  }\n\n  if (parts[5] === undefined) {\n    return true;\n  }\n\n  var addressFieldDigit = Number(parts[5][0]);\n\n  if (isNaN(addressFieldDigit) || addressFieldDigit < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { generateAddresses, isValidPath };","var assert = require('assert')\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = require('crypto')\nvar bs58check = require('bs58check')\nvar secp256k1 = require('secp256k1')\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8')\nvar HARDENED_OFFSET = 0x80000000\nvar LEN = 78\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nvar BITCOIN_VERSIONS = {private: 0x0488ADE4, public: 0x0488B21E}\n\nfunction HDKey (versions) {\n  this.versions = versions || BITCOIN_VERSIONS\n  this.depth = 0\n  this.index = 0\n  this._privateKey = null\n  this._publicKey = null\n  this.chainCode = null\n  this._fingerprint = 0\n  this.parentFingerprint = 0\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', { get: function () { return this._fingerprint } })\nObject.defineProperty(HDKey.prototype, 'identifier', { get: function () { return this._identifier } })\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', { get: function () { return this.identifier } })\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.')\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key')\n\n    this._privateKey = value\n    this._publicKey = Buffer.from(secp256k1.publicKeyCreate(value, true))\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.')\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key')\n\n    this._publicKey = Buffer.from(secp256k1.publicKeyConvert(value, true)) // force compressed point\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n    this._privateKey = null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey) return bs58check.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])))\n    else return null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return bs58check.encode(serialize(this, this.versions.public, this.publicKey))\n  }\n})\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this\n  }\n\n  var entries = path.split('/')\n  var hdkey = this\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"')\n      return\n    }\n\n    var hardened = (c.length > 1) && (c[c.length - 1] === \"'\")\n    var childIndex = parseInt(c, 10) // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index')\n    if (hardened) childIndex += HARDENED_OFFSET\n\n    hdkey = hdkey.deriveChild(childIndex)\n  })\n\n  return hdkey\n}\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET\n  var indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  var data\n\n  if (isHardened) { // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key')\n\n    var pk = this.privateKey\n    var zb = Buffer.alloc(1, 0)\n    pk = Buffer.concat([zb, pk])\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer])\n  } else { // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer])\n  }\n\n  var I = crypto.createHmac('sha512', this.chainCode).update(data).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hd = new HDKey(this.versions)\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(this.privateKey), IL))\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(this.publicKey), IL, true))\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  }\n\n  hd.chainCode = IR\n  hd.depth = this.depth + 1\n  hd.parentFingerprint = this.fingerprint// .readUInt32BE(0)\n  hd.index = index\n\n  return hd\n}\n\nHDKey.prototype.sign = function (hash) {\n  return Buffer.from(secp256k1.ecdsaSign(hash, this.privateKey).signature)\n}\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1.ecdsaVerify(\n    Uint8Array.from(signature),\n    Uint8Array.from(hash),\n    Uint8Array.from(this.publicKey)\n  )\n}\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) crypto.randomBytes(this._privateKey.length).copy(this._privateKey)\n  this._privateKey = null\n  return this\n}\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  }\n}\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = crypto.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hdkey = new HDKey(versions)\n  hdkey.chainCode = IR\n  hdkey.privateKey = IL\n\n  return hdkey\n}\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS\n  var hdkey = new HDKey(versions)\n\n  var keyBuffer = bs58check.decode(base58key)\n\n  var version = keyBuffer.readUInt32BE(0)\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public')\n\n  hdkey.depth = keyBuffer.readUInt8(4)\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5)\n  hdkey.index = keyBuffer.readUInt32BE(9)\n  hdkey.chainCode = keyBuffer.slice(13, 45)\n\n  var key = keyBuffer.slice(45)\n  if (key.readUInt8(0) === 0) { // private\n    assert(version === versions.private, 'Version mismatch: version does not match private')\n    hdkey.privateKey = key.slice(1) // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public')\n    hdkey.publicKey = key\n  }\n\n  return hdkey\n}\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv)\n}\n\nfunction serialize (hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN)\n\n  buffer.writeUInt32BE(version, 0)\n  buffer.writeUInt8(hdkey.depth, 4)\n\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000\n  buffer.writeUInt32BE(fingerprint, 5)\n  buffer.writeUInt32BE(hdkey.index, 9)\n\n  hdkey.chainCode.copy(buffer, 13)\n  key.copy(buffer, 45)\n\n  return buffer\n}\n\nfunction hash160 (buf) {\n  var sha = crypto.createHash('sha256').update(buf).digest()\n  return crypto.createHash('ripemd160').update(sha).digest()\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET\nmodule.exports = HDKey\n"]}