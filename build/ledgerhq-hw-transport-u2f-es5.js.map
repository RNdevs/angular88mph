{"version":3,"sources":["webpack:///node_modules/@ledgerhq/hw-transport-u2f/lib-es/TransportU2F.js","webpack:///node_modules/u2f-api/index.js","webpack:///node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","webpack:///node_modules/u2f-api/lib/google-u2f-api.js","webpack:///node_modules/u2f-api/lib/u2f-api.js","webpack:///node_modules/@ledgerhq/logs/lib-es/index.js"],"names":["wrapU2FTransportError","originalError","message","id","err","wrapApdu","apdu","key","result","Buffer","alloc","length","i","webSafe64","base64","replace","normal64","substring","attemptExchange","timeoutMillis","scrambleKey","unwrap","keyHandle","challenge","from","signRequest","version","toString","appId","location","origin","then","response","signatureData","data","slice","transportInstances","emitDisconnect","forEach","t","emit","isTimeoutU2FError","u2fError","metaData","code","TransportU2F","_","_openTimeout","push","exchangeTimeout","isU2FError","type","Promise","resolve","isSupported","list","supported","listen","observer","unsubscribed","next","descriptor","complete","error","unsubscribe","module","exports","Transport","unresponsiveTimeout","deviceModel","_events","send","cla","ins","p1","p2","statusList","OK","exchange","concat","sw","readUInt16BE","some","s","exchangeBusyPromise","exchangeAtomicImpl","f","busyPromise","r","resolveBusy","unresponsiveReached","timeout","setTimeout","res","clearTimeout","_appAPIlock","_apdu","Error","_key","eventName","cb","on","removeListener","event","args","console","warn","self","methods","methodName","decorateAppAPIMethod","ctx","reject","setScrambleKey","apply","openTimeout","listenTimeout","found","sub","e","listenTimeoutId","open","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","u2f","EXTENSION_ID","MessageTypes","ErrorCodes","Request","Response","SignRequest","SignResponse","RegisterRequest","RegisterResponse","disconnect","port_","getMessagePort","callback","chrome","runtime","msg","U2F_SIGN_REQUEST","signRequests","sendMessage","lastError","getChromeRuntimePort_","getIframePort_","port","connect","WrappedChromeRuntimePort_","prototype","postMessage","addEventListener","handler","name","toLowerCase","onMessage","addListener","iframeOrigin","iframe","document","createElement","src","setAttribute","body","appendChild","hasCalledBack","channel","MessageChannel","ready","port1","removeEventListener","start","contentWindow","port2","EXTENSION_TIMEOUT_SEC","waitingForPort_","reqCounter_","callbackMap_","getPortSingleton_","responseHandler_","shift","reqId","sign","opt_timeoutSeconds","req","timeoutSeconds","requestId","register","registerRequests","U2F_REGISTER_REQUEST","API","chromeApi","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","notSupported","hasNativeSupport","window","protocol","ok","bind","ensureSupport","ErrorNames","CANCELLED","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","makeError","errorCode","deferPromise","promise","ret","cancel","backend","defer","fun","_ensureSupport","Array","isArray","native","cbNative","cbChrome","makeDefault","func","global","call","arguments","subscribers","log","obj","String","date","Date","dispatch","indexOf","pop","__ledgerLogsListen"],"mappings":"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","file":"ledgerhq-hw-transport-u2f-es5.js","sourcesContent":["import { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id); // $FlowFixMe\n\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu, key) {\n  const result = Buffer.alloc(apdu.length);\n\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n\n  return result;\n} // Convert from normal to web-safe, strip trailing \"=\"s\n\n\nconst webSafe64 = base64 => base64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\"); // Convert from web-safe to normal, add trailing \"=\"s\n\n\nconst normal64 = base64 => base64.replace(/-/g, \"+\").replace(/_/g, \"/\") + \"==\".substring(0, 3 * base64.length % 4);\n\nfunction attemptExchange(apdu, timeoutMillis, scrambleKey, unwrap) {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\"0000000000000000000000000000000000000000000000000000000000000000\", \"hex\");\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then(response => {\n    const {\n      signatureData\n    } = response;\n\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\n\n\nexport default class TransportU2F extends Transport {\n  /*\n   */\n\n  /*\n   */\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_, _openTimeout = 5000) {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    this.scrambleKey = void 0;\n    this.unwrap = true;\n    transportInstances.push(this);\n  }\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n\n\n  async exchange(apdu) {\n    try {\n      return await attemptExchange(apdu, this.exchangeTimeout, this.scrambleKey, this.unwrap);\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        } // the wrapping make error more usable and \"printable\" to the end user.\n\n\n        throw wrapU2FTransportError(e, \"Failed to sign with Ledger device: U2F \" + e.metaData.type, \"U2F_\" + e.metaData.code);\n      } else {\n        throw e;\n      }\n    }\n  }\n  /**\n   */\n\n\n  setScrambleKey(scrambleKey) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n  /**\n   */\n\n\n  setUnwrap(unwrap) {\n    this.unwrap = unwrap;\n  }\n\n  close() {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n\n}\nTransportU2F.isSupported = isSupported;\n\nTransportU2F.list = () => // this transport is not discoverable but we are going to guess if it is here with isSupported()\nisSupported().then(supported => supported ? [null] : []);\n\nTransportU2F.listen = observer => {\n  let unsubscribed = false;\n  isSupported().then(supported => {\n    if (unsubscribed) return;\n\n    if (supported) {\n      observer.next({\n        type: \"add\",\n        descriptor: null\n      });\n      observer.complete();\n    } else {\n      observer.error(new TransportError(\"U2F browser support is needed for Ledger. \" + \"Please use Chrome, Opera or Firefox with a U2F extension. \" + \"Also make sure you're on an HTTPS connection\", \"U2FNotSupported\"));\n    }\n  });\n  return {\n    unsubscribe: () => {\n      unsubscribed = true;\n    }\n  };\n};\n//# sourceMappingURL=TransportU2F.js.map","'use strict';\nmodule.exports = require( './lib/u2f-api' );","import EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError } from \"@ledgerhq/errors\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\n/**\n */\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport {\n  constructor() {\n    this.exchangeTimeout = 30000;\n    this.unresponsiveTimeout = 15000;\n    this.deviceModel = null;\n    this._events = new EventEmitter();\n\n    this.send = async (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK]) => {\n      if (data.length >= 256) {\n        throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n      }\n\n      const response = await this.exchange(Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]));\n      const sw = response.readUInt16BE(response.length - 2);\n\n      if (!statusList.some(s => s === sw)) {\n        throw new TransportStatusError(sw);\n      }\n\n      return response;\n    };\n\n    this.exchangeBusyPromise = void 0;\n\n    this.exchangeAtomicImpl = async f => {\n      if (this.exchangeBusyPromise) {\n        throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n      }\n\n      let resolveBusy;\n      const busyPromise = new Promise(r => {\n        resolveBusy = r;\n      });\n      this.exchangeBusyPromise = busyPromise;\n      let unresponsiveReached = false;\n      const timeout = setTimeout(() => {\n        unresponsiveReached = true;\n        this.emit(\"unresponsive\");\n      }, this.unresponsiveTimeout);\n\n      try {\n        const res = await f();\n\n        if (unresponsiveReached) {\n          this.emit(\"responsive\");\n        }\n\n        return res;\n      } finally {\n        clearTimeout(timeout);\n        if (resolveBusy) resolveBusy();\n        this.exchangeBusyPromise = null;\n      }\n    };\n\n    this._appAPIlock = null;\n  }\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu) {\n    throw new Error(\"exchange not implemented\");\n  }\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n\n\n  setScrambleKey(_key) {}\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n\n\n  close() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName, cb) {\n    this._events.on(eventName, cb);\n  }\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n\n\n  off(eventName, cb) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event, ...args) {\n    this._events.emit(event, ...args);\n  }\n  /**\n   * Enable or not logs of the binary exchange\n   */\n\n\n  setDebugMode() {\n    console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n  }\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n\n\n  setExchangeTimeout(exchangeTimeout) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n\n\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(openTimeout = 3000, listenTimeout) {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout ? setTimeout(() => {\n        sub.unsubscribe();\n        reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n      }, listenTimeout) : null;\n    });\n  }\n\n  decorateAppAPIMethods(self, methods, scrambleKey) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n    }\n  }\n\n  decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n    return async (...args) => {\n      const {\n        _appAPIlock\n      } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n}\nTransport.isSupported = void 0;\nTransport.list = void 0;\nTransport.listen = void 0;\nTransport.open = void 0;\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n//# sourceMappingURL=Transport.js.map","// Copyright 2014 Google Inc. All rights reserved\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n\n'use strict';\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * The U2F extension id\n * @type {string}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n  'U2F_REGISTER_REQUEST': 'u2f_register_request',\n  'U2F_SIGN_REQUEST': 'u2f_sign_request',\n  'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n  'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n  'OK': 0,\n  'OTHER_ERROR': 1,\n  'BAD_REQUEST': 2,\n  'CONFIGURATION_UNSUPPORTED': 3,\n  'DEVICE_INELIGIBLE': 4,\n  'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array.<u2f.SignRequest>,\n *   registerRequests: ?Array.<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Call MessagePort disconnect\n */\nu2f.disconnect = function() {\n  if (u2f.port_ && u2f.port_.port_) {\n    u2f.port_.port_.disconnect();\n    u2f.port_ = null;\n  }\n};\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n    {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(null, new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var hasCalledBack = false;\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      if (!hasCalledBack)\n      {\n        hasCalledBack = true;\n        callback(null, channel.port1);\n      }\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n\n  // Give this 200ms to initialize, after that, we treat this method as failed\n  setTimeout(function() {\n    if (!hasCalledBack)\n    {\n      hasCalledBack = true;\n      callback(new Error(\"IFrame extension not supported\"));\n    }\n  }, 200);\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array.<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(null, u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(err, port) {\n        if (!err) {\n          u2f.port_ = port;\n          u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n        }\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(err, port);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(null, response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  u2f.getPortSingleton_(function(err, port) {\n    callback(!err);\n  });\n}\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(signRequests, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array.<u2f.RegisterRequest>} registerRequests\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(registerRequests, signRequests,\n    callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n","'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require( './google-u2f-api' );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== 'undefined' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google's hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn't support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== 'undefined' ) &&\n\t\t\t\t( typeof window.u2f.sign === 'function' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don't want to check for Google's extension hack on EDGE\n\t\t\t\t// as it'll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === 'http:' )\n\t\t\t\t// U2F isn't supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === 'undefined' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t\"-1\": \"CANCELLED\",\n\t\"0\": \"OK\",\n\t\"1\": \"OTHER_ERROR\",\n\t\"2\": \"BAD_REQUEST\",\n\t\"3\": \"CONFIGURATION_UNSUPPORTED\",\n\t\"4\": \"DEVICE_INELIGIBLE\",\n\t\"5\": \"TIMEOUT\"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ '' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if 'disconnect' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === 'http:' )\n\t\t\tthrow new Error( \"U2F isn't supported over http, only https\" );\n\t\tthrow new Error( \"U2F not supported\" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === 'number' && typeof timeout === 'undefined' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( \"The platform doesn't natively support promises\" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( 'isSupported' );\nmakeDefault( 'ensureSupport' );\nmakeDefault( 'register' );\nmakeDefault( 'sign' );\n","/**\n * A Log object\n */\nlet id = 0;\nconst subscribers = [];\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\n\nexport const log = (type, message, data) => {\n  const obj = {\n    type,\n    id: String(++id),\n    date: new Date()\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\n\nexport const listen = cb => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n} // for debug purpose\n\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map"]}